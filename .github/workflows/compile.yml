name: Compile Common Lisp

## Compile Common Lisp inside GitHub Actions in a platform-independent way.
## This script sets up the Common Lisp envionments, then hands it off to the
## ../../configure-and-compile.lisp

## Copyright 2024 Nicholas E. May
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at

##     http://www.apache.org/licenses/LICENSE-2.0

## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # name: Compile Common Lisp Program Cross-Platform
    name: Compile using ${{ matrix.lisp }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }} # will run all lisps on all OS
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        lisp: [sbcl]

    steps:
    - uses: actions/checkout@v3

    - name: Install Common Lisp on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install sbcl -y

    - name: Install Common Lisp on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install sbcl

    - name: Install Common Lisp on Windows
      if: matrix.os == 'windows-2019'
      run: |
        choco install sbcl

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Quicklisp, compile Common Lisp program with SBCL
      #if: matrix.os != 'windows-2019'
      #run: sbcl --non-interactive --eval '(require :asdf)' --eval '(push \#p\"${{ github.workspace }}\" asdf:*central-registry*)' --eval "(asdf:compile-system :example-system)"
      run: sbcl --non-interactive --load configure-and-compile.lisp

    - name: Install Quicklisp, compiles Common Lisp program with ${{ matrix.lisp }}
      if: matrix.lisp == 'sbcl'
      run: sbcl --non-interactive --load configure-and-compile.lisp

# - name: Compile Scheme Program with Chicken Scheme on Windows
   #   if: matrix.os == 'windows-2019'
   #   run: C:\tools\chicken\bin\csc -static main.scm
